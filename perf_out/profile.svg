<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#f8f8f8" offset="5%" />
		<stop stop-color="#e8e8e8" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>blk_mq_do_dispatch_sched (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="149" width="64.4" height="15.0" fill="rgb(84,84,209)" rx="2" ry="2" />
<text  x="1085.73" y="159.5" >blk_mq_..</text>
</g>
<g >
<title>io_read (10,101,010 samples, 1.82%)</title><rect x="460.5" y="469" width="21.5" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="463.55" y="479.5" >i..</text>
</g>
<g >
<title>copy_user_generic_string (10,101,010 samples, 1.82%)</title><rect x="460.5" y="405" width="21.5" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="463.55" y="415.5" >c..</text>
</g>
<g >
<title>ext4_file_read_iter (202,020,200 samples, 36.36%)</title><rect x="31.5" y="485" width="429.0" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="34.45" y="495.5" >ext4_file_read_iter</text>
</g>
<g >
<title>syscall (545,454,540 samples, 98.18%)</title><rect x="31.5" y="677" width="1158.5" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="34.45" y="687.5" >syscall</text>
</g>
<g >
<title>submit_bio_noacct (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="325" width="64.4" height="15.0" fill="rgb(87,87,211)" rx="2" ry="2" />
<text  x="1085.73" y="335.5" >submit_..</text>
</g>
<g >
<title>task_work_run (202,020,200 samples, 36.36%)</title><rect x="31.5" y="581" width="429.0" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="34.45" y="591.5" >task_work_run</text>
</g>
<g >
<title>syscall_exit_to_user_mode (202,020,200 samples, 36.36%)</title><rect x="31.5" y="629" width="429.0" height="15.0" fill="rgb(135,135,251)" rx="2" ry="2" />
<text  x="34.45" y="639.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>io_cqring_wait (10,101,010 samples, 1.82%)</title><rect x="460.5" y="581" width="21.5" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="463.55" y="591.5" >i..</text>
</g>
<g >
<title>__x64_sys_io_uring_enter (343,434,340 samples, 61.82%)</title><rect x="460.5" y="613" width="729.5" height="15.0" fill="rgb(87,87,210)" rx="2" ry="2" />
<text  x="463.55" y="623.5" >__x64_sys_io_uring_enter</text>
</g>
<g >
<title>rmqueue (40,404,040 samples, 7.27%)</title><rect x="675.1" y="325" width="85.8" height="15.0" fill="rgb(105,105,226)" rx="2" ry="2" />
<text  x="678.09" y="335.5" >rmqueue</text>
</g>
<g >
<title>exit_to_user_mode_loop (202,020,200 samples, 36.36%)</title><rect x="31.5" y="597" width="429.0" height="15.0" fill="rgb(103,103,224)" rx="2" ry="2" />
<text  x="34.45" y="607.5" >exit_to_user_mode_loop</text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="181" width="64.4" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="1085.73" y="191.5" >blk_mq_..</text>
</g>
<g >
<title>do_syscall_64 (545,454,540 samples, 98.18%)</title><rect x="31.5" y="645" width="1158.5" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="34.45" y="655.5" >do_syscall_64</text>
</g>
<g >
<title>charge_memcg (20,202,020 samples, 3.64%)</title><rect x="954.0" y="341" width="42.9" height="15.0" fill="rgb(124,124,242)" rx="2" ry="2" />
<text  x="957.00" y="351.5" >char..</text>
</g>
<g >
<title>blk_flush_plug_list (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="277" width="64.4" height="15.0" fill="rgb(89,89,212)" rx="2" ry="2" />
<text  x="1085.73" y="287.5" >blk_flu..</text>
</g>
<g >
<title>start_thread (545,454,540 samples, 98.18%)</title><rect x="31.5" y="709" width="1158.5" height="15.0" fill="rgb(89,89,212)" rx="2" ry="2" />
<text  x="34.45" y="719.5" >start_thread</text>
</g>
<g >
<title>ext4_readahead (60,606,060 samples, 10.91%)</title><rect x="1039.8" y="373" width="128.7" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="1042.82" y="383.5" >ext4_readahead</text>
</g>
<g >
<title>ext4_file_read_iter (10,101,010 samples, 1.82%)</title><rect x="460.5" y="453" width="21.5" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="463.55" y="463.5" >e..</text>
</g>
<g >
<title>read_pages (60,606,060 samples, 10.91%)</title><rect x="1039.8" y="389" width="128.7" height="15.0" fill="rgb(107,107,227)" rx="2" ry="2" />
<text  x="1042.82" y="399.5" >read_pages</text>
</g>
<g >
<title>submit_bio (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="341" width="64.4" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="1085.73" y="351.5" >submit_..</text>
</g>
<g >
<title>__page_cache_alloc (121,212,120 samples, 21.82%)</title><rect x="503.5" y="389" width="257.4" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="506.45" y="399.5" >__page_cache_alloc</text>
</g>
<g >
<title>printf (10,101,010 samples, 1.82%)</title><rect x="10.0" y="693" width="21.5" height="15.0" fill="rgb(81,81,206)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >p..</text>
</g>
<g >
<title>iouring_raw_iov (555,555,550 samples, 100.00%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(139,139,254)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >iouring_raw_iov</text>
</g>
<g >
<title>__io_queue_sqe (202,020,200 samples, 36.36%)</title><rect x="31.5" y="533" width="429.0" height="15.0" fill="rgb(124,124,241)" rx="2" ry="2" />
<text  x="34.45" y="543.5" >__io_queue_sqe</text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="165" width="64.4" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="1085.73" y="175.5" >__blk_m..</text>
</g>
<g >
<title>__io_queue_sqe (10,101,010 samples, 1.82%)</title><rect x="460.5" y="501" width="21.5" height="15.0" fill="rgb(124,124,241)" rx="2" ry="2" />
<text  x="463.55" y="511.5" >_..</text>
</g>
<g >
<title>scsi_prepare_cmd (10,101,010 samples, 1.82%)</title><rect x="1082.7" y="101" width="21.5" height="15.0" fill="rgb(123,123,241)" rx="2" ry="2" />
<text  x="1085.73" y="111.5" >s..</text>
</g>
<g >
<title>__import_iovec (10,101,010 samples, 1.82%)</title><rect x="1168.5" y="485" width="21.5" height="15.0" fill="rgb(90,90,214)" rx="2" ry="2" />
<text  x="1171.55" y="495.5" >_..</text>
</g>
<g >
<title>io_read (333,333,330 samples, 60.00%)</title><rect x="482.0" y="517" width="708.0" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="485.00" y="527.5" >io_read</text>
</g>
<g >
<title>io_submit_sqe (333,333,330 samples, 60.00%)</title><rect x="482.0" y="565" width="708.0" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="485.00" y="575.5" >io_submit_sqe</text>
</g>
<g >
<title>__do_sys_io_uring_enter (343,434,340 samples, 61.82%)</title><rect x="460.5" y="597" width="729.5" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="463.55" y="607.5" >__do_sys_io_uring_enter</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (545,454,540 samples, 98.18%)</title><rect x="31.5" y="661" width="1158.5" height="15.0" fill="rgb(96,96,218)" rx="2" ry="2" />
<text  x="34.45" y="671.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>filemap_get_pages (20,202,020 samples, 3.64%)</title><rect x="396.2" y="437" width="42.9" height="15.0" fill="rgb(93,93,216)" rx="2" ry="2" />
<text  x="399.18" y="447.5" >file..</text>
</g>
<g >
<title>mptscsih_qcmd (20,202,020 samples, 3.64%)</title><rect x="1104.2" y="53" width="42.9" height="15.0" fill="rgb(107,107,227)" rx="2" ry="2" />
<text  x="1107.18" y="63.5" >mpts..</text>
</g>
<g >
<title>scsi_queue_rq (20,202,020 samples, 3.64%)</title><rect x="1104.2" y="101" width="42.9" height="15.0" fill="rgb(97,97,219)" rx="2" ry="2" />
<text  x="1107.18" y="111.5" >scsi..</text>
</g>
<g >
<title>mpt_put_msg_frame (20,202,020 samples, 3.64%)</title><rect x="1104.2" y="37" width="42.9" height="15.0" fill="rgb(105,105,225)" rx="2" ry="2" />
<text  x="1107.18" y="47.5" >mpt_..</text>
</g>
<g >
<title>tctx_task_work (202,020,200 samples, 36.36%)</title><rect x="31.5" y="565" width="429.0" height="15.0" fill="rgb(133,133,249)" rx="2" ry="2" />
<text  x="34.45" y="575.5" >tctx_task_work</text>
</g>
<g >
<title>exit_to_user_mode_prepare (202,020,200 samples, 36.36%)</title><rect x="31.5" y="613" width="429.0" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="34.45" y="623.5" >exit_to_user_mode_prepare</text>
</g>
<g >
<title>blk_mq_run_hw_queue (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="229" width="64.4" height="15.0" fill="rgb(89,89,212)" rx="2" ry="2" />
<text  x="1085.73" y="239.5" >blk_mq_..</text>
</g>
<g >
<title>io_submit_sqes (333,333,330 samples, 60.00%)</title><rect x="482.0" y="581" width="708.0" height="15.0" fill="rgb(84,84,209)" rx="2" ry="2" />
<text  x="485.00" y="591.5" >io_submit_sqes</text>
</g>
<g >
<title>generic_file_read_iter (323,232,320 samples, 58.18%)</title><rect x="482.0" y="485" width="686.5" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="485.00" y="495.5" >generic_file_read_iter</text>
</g>
<g >
<title>do_user_addr_fault (10,101,010 samples, 1.82%)</title><rect x="10.0" y="645" width="21.5" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >d..</text>
</g>
<g >
<title>tctx_task_work (10,101,010 samples, 1.82%)</title><rect x="460.5" y="533" width="21.5" height="15.0" fill="rgb(133,133,249)" rx="2" ry="2" />
<text  x="463.55" y="543.5" >t..</text>
</g>
<g >
<title>exc_page_fault (10,101,010 samples, 1.82%)</title><rect x="10.0" y="661" width="21.5" height="15.0" fill="rgb(89,89,212)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >e..</text>
</g>
<g >
<title>lru_cache_add (10,101,010 samples, 1.82%)</title><rect x="1018.4" y="373" width="21.4" height="15.0" fill="rgb(131,131,247)" rx="2" ry="2" />
<text  x="1021.36" y="383.5" >l..</text>
</g>
<g >
<title>filemap_read (202,020,200 samples, 36.36%)</title><rect x="31.5" y="453" width="429.0" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="34.45" y="463.5" >filemap_read</text>
</g>
<g >
<title>io_issue_sqe (333,333,330 samples, 60.00%)</title><rect x="482.0" y="533" width="708.0" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="485.00" y="543.5" >io_issue_sqe</text>
</g>
<g >
<title>ondemand_readahead (323,232,320 samples, 58.18%)</title><rect x="482.0" y="421" width="686.5" height="15.0" fill="rgb(135,135,251)" rx="2" ry="2" />
<text  x="485.00" y="431.5" >ondemand_readahead</text>
</g>
<g >
<title>io_req_task_submit (202,020,200 samples, 36.36%)</title><rect x="31.5" y="549" width="429.0" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="34.45" y="559.5" >io_req_task_submit</text>
</g>
<g >
<title>get_page_from_freelist (121,212,120 samples, 21.82%)</title><rect x="503.5" y="341" width="257.4" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="506.45" y="351.5" >get_page_from_freelist</text>
</g>
<g >
<title>io_run_task_work (10,101,010 samples, 1.82%)</title><rect x="460.5" y="565" width="21.5" height="15.0" fill="rgb(135,135,250)" rx="2" ry="2" />
<text  x="463.55" y="575.5" >i..</text>
</g>
<g >
<title>filemap_get_pages (323,232,320 samples, 58.18%)</title><rect x="482.0" y="453" width="686.5" height="15.0" fill="rgb(93,93,216)" rx="2" ry="2" />
<text  x="485.00" y="463.5" >filemap_get_pages</text>
</g>
<g >
<title>__submit_bio (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="309" width="64.4" height="15.0" fill="rgb(110,110,230)" rx="2" ry="2" />
<text  x="1085.73" y="319.5" >__submi..</text>
</g>
<g >
<title>__blk_mq_run_hw_queue (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="197" width="64.4" height="15.0" fill="rgb(116,116,235)" rx="2" ry="2" />
<text  x="1085.73" y="207.5" >__blk_m..</text>
</g>
<g >
<title>__pagevec_lru_add (10,101,010 samples, 1.82%)</title><rect x="1018.4" y="357" width="21.4" height="15.0" fill="rgb(107,107,228)" rx="2" ry="2" />
<text  x="1021.36" y="367.5" >_..</text>
</g>
<g >
<title>all (555,555,550 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (10,101,010 samples, 1.82%)</title><rect x="996.9" y="341" width="21.5" height="15.0" fill="rgb(96,96,218)" rx="2" ry="2" />
<text  x="999.91" y="351.5" >g..</text>
</g>
<g >
<title>filemap_read (323,232,320 samples, 58.18%)</title><rect x="482.0" y="469" width="686.5" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="485.00" y="479.5" >filemap_read</text>
</g>
<g >
<title>blk_mq_submit_bio (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="293" width="64.4" height="15.0" fill="rgb(103,103,224)" rx="2" ry="2" />
<text  x="1085.73" y="303.5" >blk_mq_..</text>
</g>
<g >
<title>io_issue_sqe (10,101,010 samples, 1.82%)</title><rect x="460.5" y="485" width="21.5" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="463.55" y="495.5" >i..</text>
</g>
<g >
<title>mark_page_accessed (10,101,010 samples, 1.82%)</title><rect x="439.1" y="437" width="21.4" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="442.09" y="447.5" >m..</text>
</g>
<g >
<title>mptspi_qcmd (20,202,020 samples, 3.64%)</title><rect x="1104.2" y="69" width="42.9" height="15.0" fill="rgb(84,84,208)" rx="2" ry="2" />
<text  x="1107.18" y="79.5" >mpts..</text>
</g>
<g >
<title>ext4_es_lookup_extent (10,101,010 samples, 1.82%)</title><rect x="1061.3" y="325" width="21.4" height="15.0" fill="rgb(101,101,222)" rx="2" ry="2" />
<text  x="1064.27" y="335.5" >e..</text>
</g>
<g >
<title>__libc_start_call_main (10,101,010 samples, 1.82%)</title><rect x="10.0" y="709" width="21.5" height="15.0" fill="rgb(87,87,210)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >_..</text>
</g>
<g >
<title>io_read (202,020,200 samples, 36.36%)</title><rect x="31.5" y="501" width="429.0" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="34.45" y="511.5" >io_read</text>
</g>
<g >
<title>task_work_run (10,101,010 samples, 1.82%)</title><rect x="460.5" y="549" width="21.5" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="463.55" y="559.5" >t..</text>
</g>
<g >
<title>blk_mq_flush_plug_list (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="261" width="64.4" height="15.0" fill="rgb(92,92,215)" rx="2" ry="2" />
<text  x="1085.73" y="271.5" >blk_mq_..</text>
</g>
<g >
<title>submit_sqe (545,454,540 samples, 98.18%)</title><rect x="31.5" y="693" width="1158.5" height="15.0" fill="rgb(87,87,211)" rx="2" ry="2" />
<text  x="34.45" y="703.5" >submit_sqe</text>
</g>
<g >
<title>x64_sys_call (343,434,340 samples, 61.82%)</title><rect x="460.5" y="629" width="729.5" height="15.0" fill="rgb(130,130,247)" rx="2" ry="2" />
<text  x="463.55" y="639.5" >x64_sys_call</text>
</g>
<g >
<title>alloc_pages (121,212,120 samples, 21.82%)</title><rect x="503.5" y="373" width="257.4" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="506.45" y="383.5" >alloc_pages</text>
</g>
<g >
<title>blk_mq_sched_insert_requests (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="245" width="64.4" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="1085.73" y="255.5" >blk_mq_..</text>
</g>
<g >
<title>generic_file_read_iter (202,020,200 samples, 36.36%)</title><rect x="31.5" y="469" width="429.0" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="34.45" y="479.5" >generic_file_read_iter</text>
</g>
<g >
<title>ext4_file_read_iter (323,232,320 samples, 58.18%)</title><rect x="482.0" y="501" width="686.5" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="485.00" y="511.5" >ext4_file_read_iter</text>
</g>
<g >
<title>filemap_read (10,101,010 samples, 1.82%)</title><rect x="460.5" y="421" width="21.5" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="463.55" y="431.5" >f..</text>
</g>
<g >
<title>page_cache_ra_unbounded (323,232,320 samples, 58.18%)</title><rect x="482.0" y="405" width="686.5" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="485.00" y="415.5" >page_cache_ra_unbounded</text>
</g>
<g >
<title>__add_to_page_cache_locked (121,212,120 samples, 21.82%)</title><rect x="760.9" y="373" width="257.5" height="15.0" fill="rgb(139,139,254)" rx="2" ry="2" />
<text  x="763.91" y="383.5" >__add_to_page_cache_locked</text>
</g>
<g >
<title>page_cache_sync_ra (323,232,320 samples, 58.18%)</title><rect x="482.0" y="437" width="686.5" height="15.0" fill="rgb(118,118,236)" rx="2" ry="2" />
<text  x="485.00" y="447.5" >page_cache_sync_ra</text>
</g>
<g >
<title>clear_page_rep (80,808,080 samples, 14.55%)</title><rect x="503.5" y="325" width="171.6" height="15.0" fill="rgb(137,137,253)" rx="2" ry="2" />
<text  x="506.45" y="335.5" >clear_page_rep</text>
</g>
<g >
<title>io_req_task_submit (10,101,010 samples, 1.82%)</title><rect x="460.5" y="517" width="21.5" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="463.55" y="527.5" >i..</text>
</g>
<g >
<title>scsi_dispatch_cmd (20,202,020 samples, 3.64%)</title><rect x="1104.2" y="85" width="42.9" height="15.0" fill="rgb(91,91,214)" rx="2" ry="2" />
<text  x="1107.18" y="95.5" >scsi..</text>
</g>
<g >
<title>asm_exc_page_fault (10,101,010 samples, 1.82%)</title><rect x="10.0" y="677" width="21.5" height="15.0" fill="rgb(104,104,225)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >a..</text>
</g>
<g >
<title>add_to_page_cache_lru (131,313,130 samples, 23.64%)</title><rect x="760.9" y="389" width="278.9" height="15.0" fill="rgb(117,117,236)" rx="2" ry="2" />
<text  x="763.91" y="399.5" >add_to_page_cache_lru</text>
</g>
<g >
<title>io_issue_sqe (202,020,200 samples, 36.36%)</title><rect x="31.5" y="517" width="429.0" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="34.45" y="527.5" >io_issue_sqe</text>
</g>
<g >
<title>xa_load (10,101,010 samples, 1.82%)</title><rect x="1147.1" y="341" width="21.4" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="1150.09" y="351.5" >x..</text>
</g>
<g >
<title>filemap_get_read_batch (10,101,010 samples, 1.82%)</title><rect x="417.6" y="421" width="21.5" height="15.0" fill="rgb(112,112,231)" rx="2" ry="2" />
<text  x="420.64" y="431.5" >f..</text>
</g>
<g >
<title>__mem_cgroup_charge (30,303,030 samples, 5.45%)</title><rect x="954.0" y="357" width="64.4" height="15.0" fill="rgb(95,95,218)" rx="2" ry="2" />
<text  x="957.00" y="367.5" >__mem_c..</text>
</g>
<g >
<title>copy_user_generic_string (161,616,160 samples, 29.09%)</title><rect x="52.9" y="437" width="343.3" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="55.91" y="447.5" >copy_user_generic_string</text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="133" width="64.4" height="15.0" fill="rgb(112,112,231)" rx="2" ry="2" />
<text  x="1085.73" y="143.5" >__blk_m..</text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="213" width="64.4" height="15.0" fill="rgb(94,94,217)" rx="2" ry="2" />
<text  x="1085.73" y="223.5" >__blk_m..</text>
</g>
<g >
<title>io_import_iovec (10,101,010 samples, 1.82%)</title><rect x="1168.5" y="501" width="21.5" height="15.0" fill="rgb(113,113,232)" rx="2" ry="2" />
<text  x="1171.55" y="511.5" >i..</text>
</g>
<g >
<title>generic_file_read_iter (10,101,010 samples, 1.82%)</title><rect x="460.5" y="437" width="21.5" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="463.55" y="447.5" >g..</text>
</g>
<g >
<title>__lock_text_start (10,101,010 samples, 1.82%)</title><rect x="1018.4" y="341" width="21.4" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="1021.36" y="351.5" >_..</text>
</g>
<g >
<title>__alloc_pages (121,212,120 samples, 21.82%)</title><rect x="503.5" y="357" width="257.4" height="15.0" fill="rgb(113,113,233)" rx="2" ry="2" />
<text  x="506.45" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>ext4_mpage_readpages (60,606,060 samples, 10.91%)</title><rect x="1039.8" y="357" width="128.7" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="1042.82" y="367.5" >ext4_mpage_readp..</text>
</g>
<g >
<title>__io_queue_sqe (333,333,330 samples, 60.00%)</title><rect x="482.0" y="549" width="708.0" height="15.0" fill="rgb(124,124,241)" rx="2" ry="2" />
<text  x="485.00" y="559.5" >__io_queue_sqe</text>
</g>
<g >
<title>ext4_map_blocks (10,101,010 samples, 1.82%)</title><rect x="1061.3" y="341" width="21.4" height="15.0" fill="rgb(131,131,247)" rx="2" ry="2" />
<text  x="1064.27" y="351.5" >e..</text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (30,303,030 samples, 5.45%)</title><rect x="1082.7" y="117" width="64.4" height="15.0" fill="rgb(122,122,240)" rx="2" ry="2" />
<text  x="1085.73" y="127.5" >blk_mq_..</text>
</g>
</g>
</svg>
