<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#f8f8f8" offset="5%" />
		<stop stop-color="#e8e8e8" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="790.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="773" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="773" > </text>
<g id="frames">
<g >
<title>do_exit (30,303,030 samples, 2.50%)</title><rect x="1160.5" y="629" width="29.5" height="15.0" fill="rgb(111,111,231)" rx="2" ry="2" />
<text  x="1163.50" y="639.5" >do..</text>
</g>
<g >
<title>iov_iter_restore (30,303,030 samples, 2.50%)</title><rect x="305.0" y="501" width="29.5" height="15.0" fill="rgb(104,104,225)" rx="2" ry="2" />
<text  x="308.00" y="511.5" >io..</text>
</g>
<g >
<title>get_page_from_freelist (20,202,020 samples, 1.67%)</title><rect x="1022.8" y="389" width="19.7" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="1025.83" y="399.5" ></text>
</g>
<g >
<title>mptscsih_qcmd (101,010,100 samples, 8.33%)</title><rect x="826.2" y="53" width="98.3" height="15.0" fill="rgb(107,107,227)" rx="2" ry="2" />
<text  x="829.17" y="63.5" >mptscsih_qcmd</text>
</g>
<g >
<title>srso_safe_ret (10,101,010 samples, 0.83%)</title><rect x="334.5" y="501" width="9.8" height="15.0" fill="rgb(107,107,227)" rx="2" ry="2" />
<text  x="337.50" y="511.5" ></text>
</g>
<g >
<title>touch_atime (20,202,020 samples, 1.67%)</title><rect x="944.2" y="453" width="19.6" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="947.17" y="463.5" ></text>
</g>
<g >
<title>kfree (10,101,010 samples, 0.83%)</title><rect x="403.3" y="437" width="9.9" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="406.33" y="447.5" ></text>
</g>
<g >
<title>tctx_task_work (10,101,010 samples, 0.83%)</title><rect x="1180.2" y="597" width="9.8" height="15.0" fill="rgb(133,133,249)" rx="2" ry="2" />
<text  x="1183.17" y="607.5" ></text>
</g>
<g >
<title>xa_load (10,101,010 samples, 0.83%)</title><rect x="924.5" y="341" width="9.8" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="927.50" y="351.5" ></text>
</g>
<g >
<title>srso_safe_ret (10,101,010 samples, 0.83%)</title><rect x="1150.7" y="549" width="9.8" height="15.0" fill="rgb(107,107,227)" rx="2" ry="2" />
<text  x="1153.67" y="559.5" ></text>
</g>
<g >
<title>xas_load (20,202,020 samples, 1.67%)</title><rect x="501.7" y="421" width="19.6" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="504.67" y="431.5" ></text>
</g>
<g >
<title>io_req_rw_complete (10,101,010 samples, 0.83%)</title><rect x="1180.2" y="581" width="9.8" height="15.0" fill="rgb(94,94,217)" rx="2" ry="2" />
<text  x="1183.17" y="591.5" ></text>
</g>
<g >
<title>rmqueue (30,303,030 samples, 2.50%)</title><rect x="659.0" y="325" width="29.5" height="15.0" fill="rgb(105,105,226)" rx="2" ry="2" />
<text  x="662.00" y="335.5" >rm..</text>
</g>
<g >
<title>__alloc_pages (131,313,130 samples, 10.83%)</title><rect x="560.7" y="357" width="127.8" height="15.0" fill="rgb(113,113,233)" rx="2" ry="2" />
<text  x="563.67" y="367.5" >__alloc_pages</text>
</g>
<g >
<title>__io_queue_sqe (20,202,020 samples, 1.67%)</title><rect x="393.5" y="501" width="19.7" height="15.0" fill="rgb(124,124,241)" rx="2" ry="2" />
<text  x="396.50" y="511.5" ></text>
</g>
<g >
<title>main (10,101,010 samples, 0.83%)</title><rect x="10.0" y="693" width="9.8" height="15.0" fill="rgb(126,126,243)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>mpt_put_msg_frame (101,010,100 samples, 8.33%)</title><rect x="826.2" y="37" width="98.3" height="15.0" fill="rgb(105,105,225)" rx="2" ry="2" />
<text  x="829.17" y="47.5" >mpt_put_msg..</text>
</g>
<g >
<title>handle_mm_fault (10,101,010 samples, 0.83%)</title><rect x="29.7" y="629" width="9.8" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="32.67" y="639.5" ></text>
</g>
<g >
<title>io_submit_sqe (747,474,740 samples, 61.67%)</title><rect x="432.8" y="565" width="727.7" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="435.83" y="575.5" >io_submit_sqe</text>
</g>
<g >
<title>asm_exc_page_fault (10,101,010 samples, 0.83%)</title><rect x="29.7" y="677" width="9.8" height="15.0" fill="rgb(104,104,225)" rx="2" ry="2" />
<text  x="32.67" y="687.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_trace (10,101,010 samples, 0.83%)</title><rect x="364.0" y="485" width="9.8" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="367.00" y="495.5" ></text>
</g>
<g >
<title>read_pages (151,515,150 samples, 12.50%)</title><rect x="786.8" y="389" width="147.5" height="15.0" fill="rgb(107,107,227)" rx="2" ry="2" />
<text  x="789.83" y="399.5" >read_pages</text>
</g>
<g >
<title>arch_local_irq_enable (10,101,010 samples, 0.83%)</title><rect x="727.8" y="309" width="9.9" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="730.83" y="319.5" ></text>
</g>
<g >
<title>clear_page_rep (20,202,020 samples, 1.67%)</title><rect x="1022.8" y="373" width="19.7" height="15.0" fill="rgb(137,137,253)" rx="2" ry="2" />
<text  x="1025.83" y="383.5" ></text>
</g>
<g >
<title>io_issue_sqe (10,101,010 samples, 0.83%)</title><rect x="393.5" y="485" width="9.8" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="396.50" y="495.5" ></text>
</g>
<g >
<title>handle_pte_fault (10,101,010 samples, 0.83%)</title><rect x="29.7" y="597" width="9.8" height="15.0" fill="rgb(94,94,217)" rx="2" ry="2" />
<text  x="32.67" y="607.5" ></text>
</g>
<g >
<title>io_setup_async_rw (111,111,110 samples, 9.17%)</title><rect x="973.7" y="501" width="108.1" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="976.67" y="511.5" >io_setup_asyn..</text>
</g>
<g >
<title>exc_page_fault (10,101,010 samples, 0.83%)</title><rect x="29.7" y="661" width="9.8" height="15.0" fill="rgb(89,89,212)" rx="2" ry="2" />
<text  x="32.67" y="671.5" ></text>
</g>
<g >
<title>__x64_sys_io_uring_enter (787,878,780 samples, 65.00%)</title><rect x="393.5" y="613" width="767.0" height="15.0" fill="rgb(87,87,210)" rx="2" ry="2" />
<text  x="396.50" y="623.5" >__x64_sys_io_uring_enter</text>
</g>
<g >
<title>io_init_req (20,202,020 samples, 1.67%)</title><rect x="1121.2" y="549" width="19.6" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="1124.17" y="559.5" ></text>
</g>
<g >
<title>io_wq_submit_work (10,101,010 samples, 0.83%)</title><rect x="10.0" y="613" width="9.8" height="15.0" fill="rgb(135,135,251)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>kfree (20,202,020 samples, 1.67%)</title><rect x="373.8" y="469" width="19.7" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="376.83" y="479.5" ></text>
</g>
<g >
<title>__do_sys_io_uring_enter (787,878,780 samples, 65.00%)</title><rect x="393.5" y="597" width="767.0" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="396.50" y="607.5" >__do_sys_io_uring_enter</text>
</g>
<g >
<title>io_prep_rw (10,101,010 samples, 0.83%)</title><rect x="1140.8" y="533" width="9.9" height="15.0" fill="rgb(133,133,249)" rx="2" ry="2" />
<text  x="1143.83" y="543.5" ></text>
</g>
<g >
<title>lru_cache_add (40,404,040 samples, 3.33%)</title><rect x="747.5" y="373" width="39.3" height="15.0" fill="rgb(131,131,247)" rx="2" ry="2" />
<text  x="750.50" y="383.5" >lru..</text>
</g>
<g >
<title>io_worker_handle_work (10,101,010 samples, 0.83%)</title><rect x="10.0" y="629" width="9.8" height="15.0" fill="rgb(81,81,206)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>io_read (232,323,230 samples, 19.17%)</title><rect x="78.8" y="501" width="226.2" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="81.83" y="511.5" >io_read</text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.83%)</title><rect x="19.8" y="709" width="9.9" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="22.83" y="719.5" ></text>
</g>
<g >
<title>io_issue_sqe (272,727,270 samples, 22.50%)</title><rect x="78.8" y="517" width="265.5" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="81.83" y="527.5" >io_issue_sqe</text>
</g>
<g >
<title>ext4_readahead (151,515,150 samples, 12.50%)</title><rect x="786.8" y="373" width="147.5" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="789.83" y="383.5" >ext4_readahead</text>
</g>
<g >
<title>touch_atime (10,101,010 samples, 0.83%)</title><rect x="285.3" y="453" width="9.9" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="288.33" y="463.5" ></text>
</g>
<g >
<title>io_submit_sqes (767,676,760 samples, 63.33%)</title><rect x="413.2" y="581" width="747.3" height="15.0" fill="rgb(84,84,209)" rx="2" ry="2" />
<text  x="416.17" y="591.5" >io_submit_sqes</text>
</g>
<g >
<title>try_charge_memcg (10,101,010 samples, 0.83%)</title><rect x="727.8" y="325" width="9.9" height="15.0" fill="rgb(87,87,210)" rx="2" ry="2" />
<text  x="730.83" y="335.5" ></text>
</g>
<g >
<title>srso_safe_ret (10,101,010 samples, 0.83%)</title><rect x="1072.0" y="485" width="9.8" height="15.0" fill="rgb(107,107,227)" rx="2" ry="2" />
<text  x="1075.00" y="495.5" ></text>
</g>
<g >
<title>filemap_read (10,101,010 samples, 0.83%)</title><rect x="393.5" y="421" width="9.8" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="396.50" y="431.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (10,101,010 samples, 0.83%)</title><rect x="29.7" y="533" width="9.8" height="15.0" fill="rgb(107,107,228)" rx="2" ry="2" />
<text  x="32.67" y="543.5" ></text>
</g>
<g >
<title>task_work_run (20,202,020 samples, 1.67%)</title><rect x="393.5" y="549" width="19.7" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="396.50" y="559.5" ></text>
</g>
<g >
<title>blk_mq_do_dispatch_sched (101,010,100 samples, 8.33%)</title><rect x="826.2" y="149" width="98.3" height="15.0" fill="rgb(84,84,209)" rx="2" ry="2" />
<text  x="829.17" y="159.5" >blk_mq_do_d..</text>
</g>
<g >
<title>get_page_from_freelist (111,111,110 samples, 9.17%)</title><rect x="580.3" y="341" width="108.2" height="15.0" fill="rgb(136,136,252)" rx="2" ry="2" />
<text  x="583.33" y="351.5" >get_page_from..</text>
</g>
<g >
<title>io_issue_sqe (707,070,700 samples, 58.33%)</title><rect x="432.8" y="533" width="688.4" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="435.83" y="543.5" >io_issue_sqe</text>
</g>
<g >
<title>__fput (20,202,020 samples, 1.67%)</title><rect x="1160.5" y="581" width="19.7" height="15.0" fill="rgb(132,132,248)" rx="2" ry="2" />
<text  x="1163.50" y="591.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (101,010,100 samples, 8.33%)</title><rect x="826.2" y="181" width="98.3" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="829.17" y="191.5" >blk_mq_sche..</text>
</g>
<g >
<title>__lock_text_start (40,404,040 samples, 3.33%)</title><rect x="747.5" y="341" width="39.3" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="750.50" y="351.5" >__l..</text>
</g>
<g >
<title>bio_add_page (30,303,030 samples, 2.50%)</title><rect x="786.8" y="341" width="29.5" height="15.0" fill="rgb(99,99,221)" rx="2" ry="2" />
<text  x="789.83" y="351.5" >bi..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (333,333,330 samples, 27.50%)</title><rect x="69.0" y="613" width="324.5" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="72.00" y="623.5" >exit_to_user_mode_prepare</text>
</g>
<g >
<title>page_cache_async_ra (414,141,410 samples, 34.17%)</title><rect x="541.0" y="437" width="403.2" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="544.00" y="447.5" >page_cache_async_ra</text>
</g>
<g >
<title>lru_cache_add (10,101,010 samples, 0.83%)</title><rect x="29.7" y="549" width="9.8" height="15.0" fill="rgb(131,131,247)" rx="2" ry="2" />
<text  x="32.67" y="559.5" ></text>
</g>
<g >
<title>task_work_run (30,303,030 samples, 2.50%)</title><rect x="1160.5" y="613" width="29.5" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="1163.50" y="623.5" >ta..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10,101,010 samples, 0.83%)</title><rect x="29.7" y="693" width="9.8" height="15.0" fill="rgb(102,102,223)" rx="2" ry="2" />
<text  x="32.67" y="703.5" ></text>
</g>
<g >
<title>generic_file_read_iter (10,101,010 samples, 0.83%)</title><rect x="393.5" y="437" width="9.8" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="396.50" y="447.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (60,606,060 samples, 5.00%)</title><rect x="688.5" y="373" width="59.0" height="15.0" fill="rgb(139,139,254)" rx="2" ry="2" />
<text  x="691.50" y="383.5" >__add_..</text>
</g>
<g >
<title>xa_get_order (10,101,010 samples, 0.83%)</title><rect x="737.7" y="357" width="9.8" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="740.67" y="367.5" ></text>
</g>
<g >
<title>alloc_pages (131,313,130 samples, 10.83%)</title><rect x="560.7" y="373" width="127.8" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="563.67" y="383.5" >alloc_pages</text>
</g>
<g >
<title>__kmalloc (80,808,080 samples, 6.67%)</title><rect x="973.7" y="485" width="78.6" height="15.0" fill="rgb(88,88,212)" rx="2" ry="2" />
<text  x="976.67" y="495.5" >__kmalloc</text>
</g>
<g >
<title>xa_load (10,101,010 samples, 0.83%)</title><rect x="934.3" y="389" width="9.9" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="937.33" y="399.5" ></text>
</g>
<g >
<title>__vfprintf_internal (10,101,010 samples, 0.83%)</title><rect x="19.8" y="693" width="9.9" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="22.83" y="703.5" ></text>
</g>
<g >
<title>allocate_slab (40,404,040 samples, 3.33%)</title><rect x="1003.2" y="437" width="39.3" height="15.0" fill="rgb(125,125,242)" rx="2" ry="2" />
<text  x="1006.17" y="447.5" >all..</text>
</g>
<g >
<title>filemap_read (10,101,010 samples, 0.83%)</title><rect x="10.0" y="533" width="9.8" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>____fput (20,202,020 samples, 1.67%)</title><rect x="1160.5" y="597" width="19.7" height="15.0" fill="rgb(99,99,221)" rx="2" ry="2" />
<text  x="1163.50" y="607.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (101,010,100 samples, 8.33%)</title><rect x="826.2" y="213" width="98.3" height="15.0" fill="rgb(94,94,217)" rx="2" ry="2" />
<text  x="829.17" y="223.5" >__blk_mq_de..</text>
</g>
<g >
<title>io_read (707,070,700 samples, 58.33%)</title><rect x="432.8" y="517" width="688.4" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="435.83" y="527.5" >io_read</text>
</g>
<g >
<title>barrier (10,101,010 samples, 0.83%)</title><rect x="49.3" y="661" width="9.9" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="52.33" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30,303,030 samples, 2.50%)</title><rect x="1160.5" y="709" width="29.5" height="15.0" fill="rgb(96,96,218)" rx="2" ry="2" />
<text  x="1163.50" y="719.5" >en..</text>
</g>
<g >
<title>touch_atime (10,101,010 samples, 0.83%)</title><rect x="275.5" y="437" width="9.8" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="278.50" y="447.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (10,101,010 samples, 0.83%)</title><rect x="393.5" y="453" width="9.8" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="396.50" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,121,212,110 samples, 92.50%)</title><rect x="69.0" y="645" width="1091.5" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="72.00" y="655.5" >do_syscall_64</text>
</g>
<g >
<title>io_read (10,101,010 samples, 0.83%)</title><rect x="393.5" y="469" width="9.8" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="396.50" y="479.5" ></text>
</g>
<g >
<title>xas_load (10,101,010 samples, 0.83%)</title><rect x="924.5" y="325" width="9.8" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="927.50" y="335.5" ></text>
</g>
<g >
<title>__lock_page_async (20,202,020 samples, 1.67%)</title><rect x="521.3" y="421" width="19.7" height="15.0" fill="rgb(126,126,244)" rx="2" ry="2" />
<text  x="524.33" y="431.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (333,333,330 samples, 27.50%)</title><rect x="69.0" y="629" width="324.5" height="15.0" fill="rgb(135,135,251)" rx="2" ry="2" />
<text  x="72.00" y="639.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>ext4_file_read_iter (212,121,210 samples, 17.50%)</title><rect x="88.7" y="485" width="206.5" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="91.67" y="495.5" >ext4_file_read_iter</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,121,212,110 samples, 92.50%)</title><rect x="69.0" y="661" width="1091.5" height="15.0" fill="rgb(96,96,218)" rx="2" ry="2" />
<text  x="72.00" y="671.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>io_issue_sqe (10,101,010 samples, 0.83%)</title><rect x="10.0" y="597" width="9.8" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>barrier (10,101,010 samples, 0.83%)</title><rect x="39.5" y="677" width="9.8" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="42.50" y="687.5" ></text>
</g>
<g >
<title>rw_verify_area (20,202,020 samples, 1.67%)</title><rect x="1101.5" y="501" width="19.7" height="15.0" fill="rgb(96,96,218)" rx="2" ry="2" />
<text  x="1104.50" y="511.5" ></text>
</g>
<g >
<title>io_dismantle_req (20,202,020 samples, 1.67%)</title><rect x="373.8" y="485" width="19.7" height="15.0" fill="rgb(90,90,214)" rx="2" ry="2" />
<text  x="376.83" y="495.5" ></text>
</g>
<g >
<title>xas_load (10,101,010 samples, 0.83%)</title><rect x="737.7" y="341" width="9.8" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="740.67" y="351.5" ></text>
</g>
<g >
<title>alloc_pages (20,202,020 samples, 1.67%)</title><rect x="1022.8" y="421" width="19.7" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="1025.83" y="431.5" ></text>
</g>
<g >
<title>__fsnotify_parent (10,101,010 samples, 0.83%)</title><rect x="1111.3" y="453" width="9.9" height="15.0" fill="rgb(105,105,225)" rx="2" ry="2" />
<text  x="1114.33" y="463.5" ></text>
</g>
<g >
<title>iouring_raw_mai (1,202,020,190 samples, 99.17%)</title><rect x="19.8" y="725" width="1170.2" height="15.0" fill="rgb(138,138,253)" rx="2" ry="2" />
<text  x="22.83" y="735.5" >iouring_raw_mai</text>
</g>
<g >
<title>filemap_read (202,020,200 samples, 16.67%)</title><rect x="88.7" y="453" width="196.6" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="91.67" y="463.5" >filemap_read</text>
</g>
<g >
<title>task_work_run (333,333,330 samples, 27.50%)</title><rect x="69.0" y="581" width="324.5" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="72.00" y="591.5" >task_work_run</text>
</g>
<g >
<title>__io_queue_sqe (707,070,700 samples, 58.33%)</title><rect x="432.8" y="549" width="688.4" height="15.0" fill="rgb(124,124,241)" rx="2" ry="2" />
<text  x="435.83" y="559.5" >__io_queue_sqe</text>
</g>
<g >
<title>__blk_mq_do_dispatch_sched (101,010,100 samples, 8.33%)</title><rect x="826.2" y="133" width="98.3" height="15.0" fill="rgb(112,112,231)" rx="2" ry="2" />
<text  x="829.17" y="143.5" >__blk_mq_do..</text>
</g>
<g >
<title>atime_needs_update (10,101,010 samples, 0.83%)</title><rect x="275.5" y="421" width="9.8" height="15.0" fill="rgb(94,94,217)" rx="2" ry="2" />
<text  x="278.50" y="431.5" ></text>
</g>
<g >
<title>tctx_task_work (333,333,330 samples, 27.50%)</title><rect x="69.0" y="565" width="324.5" height="15.0" fill="rgb(133,133,249)" rx="2" ry="2" />
<text  x="72.00" y="575.5" >tctx_task_work</text>
</g>
<g >
<title>rcu_read_unlock_strict (10,101,010 samples, 0.83%)</title><rect x="265.7" y="421" width="9.8" height="15.0" fill="rgb(99,99,221)" rx="2" ry="2" />
<text  x="268.67" y="431.5" ></text>
</g>
<g >
<title>io_cqring_event_overflow (10,101,010 samples, 0.83%)</title><rect x="1180.2" y="549" width="9.8" height="15.0" fill="rgb(109,109,229)" rx="2" ry="2" />
<text  x="1183.17" y="559.5" ></text>
</g>
<g >
<title>___slab_alloc (40,404,040 samples, 3.33%)</title><rect x="1003.2" y="469" width="39.3" height="15.0" fill="rgb(110,110,230)" rx="2" ry="2" />
<text  x="1006.17" y="479.5" >___..</text>
</g>
<g >
<title>io_submit_flush_completions (50,505,050 samples, 4.17%)</title><rect x="344.3" y="517" width="49.2" height="15.0" fill="rgb(138,138,254)" rx="2" ry="2" />
<text  x="347.33" y="527.5" >io_s..</text>
</g>
<g >
<title>io_req_task_submit (20,202,020 samples, 1.67%)</title><rect x="393.5" y="517" width="19.7" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="396.50" y="527.5" ></text>
</g>
<g >
<title>kmalloc_slab (10,101,010 samples, 0.83%)</title><rect x="1042.5" y="469" width="9.8" height="15.0" fill="rgb(104,104,225)" rx="2" ry="2" />
<text  x="1045.50" y="479.5" ></text>
</g>
<g >
<title>ondemand_readahead (414,141,410 samples, 34.17%)</title><rect x="541.0" y="421" width="403.2" height="15.0" fill="rgb(135,135,251)" rx="2" ry="2" />
<text  x="544.00" y="431.5" >ondemand_readahead</text>
</g>
<g >
<title>io_req_free_batch (10,101,010 samples, 0.83%)</title><rect x="403.3" y="469" width="9.9" height="15.0" fill="rgb(119,119,237)" rx="2" ry="2" />
<text  x="406.33" y="479.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (414,141,410 samples, 34.17%)</title><rect x="541.0" y="405" width="403.2" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="544.00" y="415.5" >page_cache_ra_unbounded</text>
</g>
<g >
<title>io_run_task_work (20,202,020 samples, 1.67%)</title><rect x="393.5" y="565" width="19.7" height="15.0" fill="rgb(135,135,250)" rx="2" ry="2" />
<text  x="396.50" y="575.5" ></text>
</g>
<g >
<title>io_req_io_end (10,101,010 samples, 0.83%)</title><rect x="295.2" y="485" width="9.8" height="15.0" fill="rgb(138,138,253)" rx="2" ry="2" />
<text  x="298.17" y="495.5" ></text>
</g>
<g >
<title>copy_user_generic_string (121,212,120 samples, 10.00%)</title><rect x="137.8" y="437" width="118.0" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="140.83" y="447.5" >copy_user_gene..</text>
</g>
<g >
<title>consume_cqe (10,101,010 samples, 0.83%)</title><rect x="49.3" y="677" width="9.9" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="52.33" y="687.5" ></text>
</g>
<g >
<title>submit_bio_noacct (101,010,100 samples, 8.33%)</title><rect x="826.2" y="325" width="98.3" height="15.0" fill="rgb(87,87,211)" rx="2" ry="2" />
<text  x="829.17" y="335.5" >submit_bio_..</text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (10,101,010 samples, 0.83%)</title><rect x="29.7" y="565" width="9.8" height="15.0" fill="rgb(131,131,247)" rx="2" ry="2" />
<text  x="32.67" y="575.5" ></text>
</g>
<g >
<title>generic_file_read_iter (525,252,520 samples, 43.33%)</title><rect x="452.5" y="485" width="511.3" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="455.50" y="495.5" >generic_file_read_iter</text>
</g>
<g >
<title>main (1,151,515,140 samples, 95.00%)</title><rect x="39.5" y="693" width="1121.0" height="15.0" fill="rgb(126,126,243)" rx="2" ry="2" />
<text  x="42.50" y="703.5" >main</text>
</g>
<g >
<title>ext4_mpage_readpages (151,515,150 samples, 12.50%)</title><rect x="786.8" y="357" width="147.5" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="789.83" y="367.5" >ext4_mpage_readpages</text>
</g>
<g >
<title>filemap_get_read_batch (10,101,010 samples, 0.83%)</title><rect x="255.8" y="421" width="9.9" height="15.0" fill="rgb(112,112,231)" rx="2" ry="2" />
<text  x="258.83" y="431.5" ></text>
</g>
<g >
<title>new_slab (40,404,040 samples, 3.33%)</title><rect x="1003.2" y="453" width="39.3" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="1006.17" y="463.5" >new..</text>
</g>
<g >
<title>io_submit_flush_completions (10,101,010 samples, 0.83%)</title><rect x="1180.2" y="565" width="9.8" height="15.0" fill="rgb(138,138,254)" rx="2" ry="2" />
<text  x="1183.17" y="575.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (101,010,100 samples, 8.33%)</title><rect x="826.2" y="245" width="98.3" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="829.17" y="255.5" >blk_mq_sche..</text>
</g>
<g >
<title>io_wqe_worker (10,101,010 samples, 0.83%)</title><rect x="10.0" y="645" width="9.8" height="15.0" fill="rgb(118,118,237)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>clear_page_rep (80,808,080 samples, 6.67%)</title><rect x="580.3" y="325" width="78.7" height="15.0" fill="rgb(137,137,253)" rx="2" ry="2" />
<text  x="583.33" y="335.5" >clear_pag..</text>
</g>
<g >
<title>__GI___printf_fp_l (10,101,010 samples, 0.83%)</title><rect x="19.8" y="677" width="9.9" height="15.0" fill="rgb(134,134,250)" rx="2" ry="2" />
<text  x="22.83" y="687.5" ></text>
</g>
<g >
<title>bvec_alloc (10,101,010 samples, 0.83%)</title><rect x="816.3" y="325" width="9.9" height="15.0" fill="rgb(114,114,234)" rx="2" ry="2" />
<text  x="819.33" y="335.5" ></text>
</g>
<g >
<title>iou-wrk-7489 (10,101,010 samples, 0.83%)</title><rect x="10.0" y="725" width="9.8" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (40,404,040 samples, 3.33%)</title><rect x="747.5" y="357" width="39.3" height="15.0" fill="rgb(107,107,228)" rx="2" ry="2" />
<text  x="750.50" y="367.5" >__p..</text>
</g>
<g >
<title>filemap_get_read_batch (30,303,030 samples, 2.50%)</title><rect x="491.8" y="437" width="29.5" height="15.0" fill="rgb(112,112,231)" rx="2" ry="2" />
<text  x="494.83" y="447.5" >fi..</text>
</g>
<g >
<title>filemap_get_pages (464,646,460 samples, 38.33%)</title><rect x="491.8" y="453" width="452.4" height="15.0" fill="rgb(93,93,216)" rx="2" ry="2" />
<text  x="494.83" y="463.5" >filemap_get_pages</text>
</g>
<g >
<title>all (1,212,121,200 samples, 100%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(90,90,213)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (101,010,100 samples, 8.33%)</title><rect x="826.2" y="277" width="98.3" height="15.0" fill="rgb(89,89,212)" rx="2" ry="2" />
<text  x="829.17" y="287.5" >blk_flush_p..</text>
</g>
<g >
<title>__mem_cgroup_charge (50,505,050 samples, 4.17%)</title><rect x="688.5" y="357" width="49.2" height="15.0" fill="rgb(95,95,218)" rx="2" ry="2" />
<text  x="691.50" y="367.5" >__me..</text>
</g>
<g >
<title>__handle_mm_fault (10,101,010 samples, 0.83%)</title><rect x="29.7" y="613" width="9.8" height="15.0" fill="rgb(82,82,207)" rx="2" ry="2" />
<text  x="32.67" y="623.5" ></text>
</g>
<g >
<title>syscall (1,121,212,110 samples, 92.50%)</title><rect x="69.0" y="677" width="1091.5" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="72.00" y="687.5" >syscall</text>
</g>
<g >
<title>io_uring_release (20,202,020 samples, 1.67%)</title><rect x="1160.5" y="565" width="19.7" height="15.0" fill="rgb(114,114,233)" rx="2" ry="2" />
<text  x="1163.50" y="575.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (10,101,010 samples, 0.83%)</title><rect x="1170.3" y="501" width="9.9" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="1173.33" y="511.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (10,101,010 samples, 0.83%)</title><rect x="10.0" y="565" width="9.8" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (333,333,330 samples, 27.50%)</title><rect x="69.0" y="597" width="324.5" height="15.0" fill="rgb(103,103,224)" rx="2" ry="2" />
<text  x="72.00" y="607.5" >exit_to_user_mode_loop</text>
</g>
<g >
<title>__blk_mq_sched_dispatch_requests (101,010,100 samples, 8.33%)</title><rect x="826.2" y="165" width="98.3" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="829.17" y="175.5" >__blk_mq_sc..</text>
</g>
<g >
<title>init_sqe (10,101,010 samples, 0.83%)</title><rect x="59.2" y="677" width="9.8" height="15.0" fill="rgb(83,83,208)" rx="2" ry="2" />
<text  x="62.17" y="687.5" ></text>
</g>
<g >
<title>__cond_resched (10,101,010 samples, 0.83%)</title><rect x="482.0" y="453" width="9.8" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="485.00" y="463.5" ></text>
</g>
<g >
<title>__submit_bio (101,010,100 samples, 8.33%)</title><rect x="826.2" y="309" width="98.3" height="15.0" fill="rgb(110,110,230)" rx="2" ry="2" />
<text  x="829.17" y="319.5" >__submit_bio</text>
</g>
<g >
<title>io_req_free_batch (20,202,020 samples, 1.67%)</title><rect x="373.8" y="501" width="19.7" height="15.0" fill="rgb(119,119,237)" rx="2" ry="2" />
<text  x="376.83" y="511.5" ></text>
</g>
<g >
<title>[unknown] (10,101,010 samples, 0.83%)</title><rect x="10.0" y="677" width="9.8" height="15.0" fill="rgb(86,86,210)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (101,010,100 samples, 8.33%)</title><rect x="826.2" y="197" width="98.3" height="15.0" fill="rgb(116,116,235)" rx="2" ry="2" />
<text  x="829.17" y="207.5" >__blk_mq_ru..</text>
</g>
<g >
<title>do_user_addr_fault (10,101,010 samples, 0.83%)</title><rect x="29.7" y="645" width="9.8" height="15.0" fill="rgb(108,108,228)" rx="2" ry="2" />
<text  x="32.67" y="655.5" ></text>
</g>
<g >
<title>io_req_task_submit (323,232,320 samples, 26.67%)</title><rect x="78.8" y="549" width="314.7" height="15.0" fill="rgb(115,115,234)" rx="2" ry="2" />
<text  x="81.83" y="559.5" >io_req_task_submit</text>
</g>
<g >
<title>__page_cache_alloc (141,414,140 samples, 11.67%)</title><rect x="550.8" y="389" width="137.7" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="553.83" y="399.5" >__page_cache_alloc</text>
</g>
<g >
<title>import_single_range (10,101,010 samples, 0.83%)</title><rect x="963.8" y="501" width="9.9" height="15.0" fill="rgb(120,120,238)" rx="2" ry="2" />
<text  x="966.83" y="511.5" ></text>
</g>
<g >
<title>atime_needs_update (20,202,020 samples, 1.67%)</title><rect x="944.2" y="437" width="19.6" height="15.0" fill="rgb(94,94,217)" rx="2" ry="2" />
<text  x="947.17" y="447.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (101,010,100 samples, 8.33%)</title><rect x="688.5" y="389" width="98.3" height="15.0" fill="rgb(117,117,236)" rx="2" ry="2" />
<text  x="691.50" y="399.5" >add_to_page..</text>
</g>
<g >
<title>generic_file_read_iter (212,121,210 samples, 17.50%)</title><rect x="88.7" y="469" width="206.5" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="91.67" y="479.5" >generic_file_read_iter</text>
</g>
<g >
<title>filemap_update_page (20,202,020 samples, 1.67%)</title><rect x="521.3" y="437" width="19.7" height="15.0" fill="rgb(101,101,222)" rx="2" ry="2" />
<text  x="524.33" y="447.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (535,353,530 samples, 44.17%)</title><rect x="442.7" y="501" width="521.1" height="15.0" fill="rgb(127,127,244)" rx="2" ry="2" />
<text  x="445.67" y="511.5" >ext4_file_read_iter</text>
</g>
<g >
<title>__io_cqring_overflow_flush (20,202,020 samples, 1.67%)</title><rect x="1160.5" y="533" width="19.7" height="15.0" fill="rgb(136,136,251)" rx="2" ry="2" />
<text  x="1163.50" y="543.5" ></text>
</g>
<g >
<title>tctx_task_work (20,202,020 samples, 1.67%)</title><rect x="393.5" y="533" width="19.7" height="15.0" fill="rgb(133,133,249)" rx="2" ry="2" />
<text  x="396.50" y="543.5" ></text>
</g>
<g >
<title>io_submit_flush_completions (10,101,010 samples, 0.83%)</title><rect x="403.3" y="485" width="9.9" height="15.0" fill="rgb(138,138,254)" rx="2" ry="2" />
<text  x="406.33" y="495.5" ></text>
</g>
<g >
<title>__cond_resched (10,101,010 samples, 0.83%)</title><rect x="570.5" y="341" width="9.8" height="15.0" fill="rgb(95,95,217)" rx="2" ry="2" />
<text  x="573.50" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (787,878,780 samples, 65.00%)</title><rect x="393.5" y="629" width="767.0" height="15.0" fill="rgb(130,130,247)" rx="2" ry="2" />
<text  x="396.50" y="639.5" >x64_sys_call</text>
</g>
<g >
<title>io_cqring_event_overflow (20,202,020 samples, 1.67%)</title><rect x="354.2" y="501" width="19.6" height="15.0" fill="rgb(109,109,229)" rx="2" ry="2" />
<text  x="357.17" y="511.5" ></text>
</g>
<g >
<title>__libc_start_call_main (10,101,010 samples, 0.83%)</title><rect x="10.0" y="709" width="9.8" height="15.0" fill="rgb(87,87,210)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>copy_user_generic_string (10,101,010 samples, 0.83%)</title><rect x="393.5" y="405" width="9.8" height="15.0" fill="rgb(80,80,205)" rx="2" ry="2" />
<text  x="396.50" y="415.5" ></text>
</g>
<g >
<title>filemap_get_pages (20,202,020 samples, 1.67%)</title><rect x="255.8" y="437" width="19.7" height="15.0" fill="rgb(93,93,216)" rx="2" ry="2" />
<text  x="258.83" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (30,303,030 samples, 2.50%)</title><rect x="1160.5" y="661" width="29.5" height="15.0" fill="rgb(91,91,214)" rx="2" ry="2" />
<text  x="1163.50" y="671.5" >__..</text>
</g>
<g >
<title>generic_file_read_iter (10,101,010 samples, 0.83%)</title><rect x="10.0" y="549" width="9.8" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>filemap_read (525,252,520 samples, 43.33%)</title><rect x="452.5" y="469" width="511.3" height="15.0" fill="rgb(130,130,246)" rx="2" ry="2" />
<text  x="455.50" y="479.5" >filemap_read</text>
</g>
<g >
<title>io_read (10,101,010 samples, 0.83%)</title><rect x="10.0" y="581" width="9.8" height="15.0" fill="rgb(125,125,243)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>copy_page_to_iter (20,202,020 samples, 1.67%)</title><rect x="118.2" y="437" width="19.6" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="121.17" y="447.5" ></text>
</g>
<g >
<title>scsi_queue_rq (101,010,100 samples, 8.33%)</title><rect x="826.2" y="101" width="98.3" height="15.0" fill="rgb(97,97,219)" rx="2" ry="2" />
<text  x="829.17" y="111.5" >scsi_queue_rq</text>
</g>
<g >
<title>__bio_try_merge_page (10,101,010 samples, 0.83%)</title><rect x="806.5" y="325" width="9.8" height="15.0" fill="rgb(98,98,220)" rx="2" ry="2" />
<text  x="809.50" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (20,202,020 samples, 1.67%)</title><rect x="1022.8" y="405" width="19.7" height="15.0" fill="rgb(113,113,233)" rx="2" ry="2" />
<text  x="1025.83" y="415.5" ></text>
</g>
<g >
<title>io_dismantle_req (10,101,010 samples, 0.83%)</title><rect x="403.3" y="453" width="9.9" height="15.0" fill="rgb(90,90,214)" rx="2" ry="2" />
<text  x="406.33" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (10,101,010 samples, 0.83%)</title><rect x="29.7" y="581" width="9.8" height="15.0" fill="rgb(120,120,238)" rx="2" ry="2" />
<text  x="32.67" y="591.5" ></text>
</g>
<g >
<title>security_file_permission (10,101,010 samples, 0.83%)</title><rect x="1111.3" y="485" width="9.9" height="15.0" fill="rgb(105,105,225)" rx="2" ry="2" />
<text  x="1114.33" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (30,303,030 samples, 2.50%)</title><rect x="1160.5" y="693" width="29.5" height="15.0" fill="rgb(85,85,209)" rx="2" ry="2" />
<text  x="1163.50" y="703.5" >do..</text>
</g>
<g >
<title>io_file_get_normal (10,101,010 samples, 0.83%)</title><rect x="1131.0" y="533" width="9.8" height="15.0" fill="rgb(110,110,230)" rx="2" ry="2" />
<text  x="1134.00" y="543.5" ></text>
</g>
<g >
<title>__libc_start_call_main (1,161,616,150 samples, 95.83%)</title><rect x="29.7" y="709" width="1130.8" height="15.0" fill="rgb(87,87,210)" rx="2" ry="2" />
<text  x="32.67" y="719.5" >__libc_start_call_main</text>
</g>
<g >
<title>__lock_text_start (10,101,010 samples, 0.83%)</title><rect x="29.7" y="517" width="9.8" height="15.0" fill="rgb(112,112,232)" rx="2" ry="2" />
<text  x="32.67" y="527.5" ></text>
</g>
<g >
<title>memset (20,202,020 samples, 1.67%)</title><rect x="1052.3" y="485" width="19.7" height="15.0" fill="rgb(83,83,208)" rx="2" ry="2" />
<text  x="1055.33" y="495.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (101,010,100 samples, 8.33%)</title><rect x="826.2" y="229" width="98.3" height="15.0" fill="rgb(89,89,212)" rx="2" ry="2" />
<text  x="829.17" y="239.5" >blk_mq_run_..</text>
</g>
<g >
<title>blk_mq_flush_plug_list (101,010,100 samples, 8.33%)</title><rect x="826.2" y="261" width="98.3" height="15.0" fill="rgb(92,92,215)" rx="2" ry="2" />
<text  x="829.17" y="271.5" >blk_mq_flus..</text>
</g>
<g >
<title>memset (10,101,010 samples, 0.83%)</title><rect x="816.3" y="309" width="9.9" height="15.0" fill="rgb(83,83,208)" rx="2" ry="2" />
<text  x="819.33" y="319.5" ></text>
</g>
<g >
<title>mptspi_qcmd (101,010,100 samples, 8.33%)</title><rect x="826.2" y="69" width="98.3" height="15.0" fill="rgb(84,84,208)" rx="2" ry="2" />
<text  x="829.17" y="79.5" >mptspi_qcmd</text>
</g>
<g >
<title>ret_from_fork (10,101,010 samples, 0.83%)</title><rect x="10.0" y="661" width="9.8" height="15.0" fill="rgb(107,107,227)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>blk_mq_submit_bio (101,010,100 samples, 8.33%)</title><rect x="826.2" y="293" width="98.3" height="15.0" fill="rgb(103,103,224)" rx="2" ry="2" />
<text  x="829.17" y="303.5" >blk_mq_subm..</text>
</g>
<g >
<title>charge_memcg (50,505,050 samples, 4.17%)</title><rect x="688.5" y="341" width="49.2" height="15.0" fill="rgb(124,124,242)" rx="2" ry="2" />
<text  x="691.50" y="351.5" >char..</text>
</g>
<g >
<title>memcpy (20,202,020 samples, 1.67%)</title><rect x="1081.8" y="501" width="19.7" height="15.0" fill="rgb(83,83,208)" rx="2" ry="2" />
<text  x="1084.83" y="511.5" ></text>
</g>
<g >
<title>apparmor_file_permission (10,101,010 samples, 0.83%)</title><rect x="1101.5" y="485" width="9.8" height="15.0" fill="rgb(95,95,218)" rx="2" ry="2" />
<text  x="1104.50" y="495.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (101,010,100 samples, 8.33%)</title><rect x="826.2" y="117" width="98.3" height="15.0" fill="rgb(122,122,240)" rx="2" ry="2" />
<text  x="829.17" y="127.5" >blk_mq_disp..</text>
</g>
<g >
<title>io_cqring_wait (20,202,020 samples, 1.67%)</title><rect x="393.5" y="581" width="19.7" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="396.50" y="591.5" ></text>
</g>
<g >
<title>x64_sys_call (30,303,030 samples, 2.50%)</title><rect x="1160.5" y="677" width="29.5" height="15.0" fill="rgb(130,130,247)" rx="2" ry="2" />
<text  x="1163.50" y="687.5" >x6..</text>
</g>
<g >
<title>scsi_dispatch_cmd (101,010,100 samples, 8.33%)</title><rect x="826.2" y="85" width="98.3" height="15.0" fill="rgb(91,91,214)" rx="2" ry="2" />
<text  x="829.17" y="95.5" >scsi_dispat..</text>
</g>
<g >
<title>__io_queue_sqe (323,232,320 samples, 26.67%)</title><rect x="78.8" y="533" width="314.7" height="15.0" fill="rgb(124,124,241)" rx="2" ry="2" />
<text  x="81.83" y="543.5" >__io_queue_sqe</text>
</g>
<g >
<title>submit_bio (101,010,100 samples, 8.33%)</title><rect x="826.2" y="341" width="98.3" height="15.0" fill="rgb(83,83,207)" rx="2" ry="2" />
<text  x="829.17" y="351.5" >submit_bio</text>
</g>
<g >
<title>bio_alloc_bioset (10,101,010 samples, 0.83%)</title><rect x="816.3" y="341" width="9.9" height="15.0" fill="rgb(81,81,206)" rx="2" ry="2" />
<text  x="819.33" y="351.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook.constprop.0 (10,101,010 samples, 0.83%)</title><rect x="383.7" y="453" width="9.8" height="15.0" fill="rgb(124,124,242)" rx="2" ry="2" />
<text  x="386.67" y="463.5" ></text>
</g>
<g >
<title>fsnotify_perm.part.0 (10,101,010 samples, 0.83%)</title><rect x="1111.3" y="469" width="9.9" height="15.0" fill="rgb(128,128,245)" rx="2" ry="2" />
<text  x="1114.33" y="479.5" ></text>
</g>
<g >
<title>io_req_prep (10,101,010 samples, 0.83%)</title><rect x="1140.8" y="549" width="9.9" height="15.0" fill="rgb(117,117,236)" rx="2" ry="2" />
<text  x="1143.83" y="559.5" ></text>
</g>
<g >
<title>do_group_exit (30,303,030 samples, 2.50%)</title><rect x="1160.5" y="645" width="29.5" height="15.0" fill="rgb(97,97,219)" rx="2" ry="2" />
<text  x="1163.50" y="655.5" >do..</text>
</g>
<g >
<title>kfree (10,101,010 samples, 0.83%)</title><rect x="1170.3" y="517" width="9.9" height="15.0" fill="rgb(100,100,222)" rx="2" ry="2" />
<text  x="1173.33" y="527.5" ></text>
</g>
<g >
<title>io_ring_ctx_wait_and_kill (20,202,020 samples, 1.67%)</title><rect x="1160.5" y="549" width="19.7" height="15.0" fill="rgb(102,102,224)" rx="2" ry="2" />
<text  x="1163.50" y="559.5" ></text>
</g>
</g>
</svg>
